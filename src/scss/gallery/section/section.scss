@use "sass:map";
@use "sass:list";

$base-width: 1000px;

//p를 같은 list에 두고 관리하는건 유지보수에 도움이 안 될 것 같아서..
//list<map>
$articles: (
  (),
  //index를 p와 맞추기 위해서..
  (margin: 0 0 10px 10px),
  (margin: 0 0 10px 10px),
  (width: 500px, float: none, margin: 10px 0 10px 0px),
  (width: 500px, float: right, margin: 0 0 0 10px),
  (width: 1000px, height: 371px, margin: 0 0 10px 0, background-image: url("../../../../rsc/1000x371.png")),
  (margin: 0 0 10px 0)
);

$p_list : ((right: 10px, bottom: 10px, font-size: 30px),
  (top: 50px, left: 10px, font-size: 30px),
  (right: 10px, bottom: 20px, font-size: 20px),
  (
    p1:(color: black, width: 300px, bottom: 20px, font-size: 14px, margin: 0 95px), //4는 p가 2개라. for에서 예외처리.
    p2:(font-size: 30px, right: 20px, bottom: 30px, color: gold, )
    ),
  (),
  (display: inline-block, width: 100%, text-align: center, font-size: 50px, font-weight: 700, margin: 160px auto, color: white, text-shadow: 3px 10px 3px black),
  (width: 450px, height: 150px, right: 30px, bottom: 40px, font-size: 20px, font-weight: 100)); //7에 있는 span은 밑에서 추가

.p-common {
  position: absolute;
  font-weight: 600;
  text-align: start;
  color: white;
}

section {
  padding: 130px 0 0 0;
  width: $base-width;
  font-size: 0;

  article {
    position: relative;
    float: left;
  }

  @for $i from 1 through 7 {
    $_article: list.nth($articles, $i);
    $_p: list.nth($p_list, $i);

    .article#{$i} {
      @each $prop, $value in $_article {
        #{$prop}: #{$value};
      }

      p {
        @extend .p-common;

        @each $prop, $value in $_p {
          @if $i !=4 {
            #{$prop}: #{$value}
          }
        }
      }
    }
  }

  .article4 {
    $_p: list.nth($p_list, 4);

    @each $key, $map in $_p {
      .#{$key} {
        @each $prop, $value in $map {
          #{$prop}: #{$value};
        }
      }
    }
  }

  .article7 {
    p {
      span {
        display: inline;
        font-size: 30px;
        font-weight: 700;
      }
    }
  }
}